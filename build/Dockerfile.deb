# time docker build --rm=true -t agent-builder-deb -f Dockerfile.deb .
# time docker run -i --name agent-builder-deb -v `pwd`:/vagrant agent-builder-deb
# debugging:
# docker run -it -v `pwd`:/vagrant agent-builder-deb bash

FROM      debian:7

RUN apt-get update \
 && apt-get install -y build-essential \
 && apt-get install -y gnupg2 \
 && apt-get install -y curl wget \
 && apt-get install -y git libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev unzip \
 && apt-get install -y cmake mysql-client libmysqlclient-dev postgresql-server-dev-all lm-sensors flex libgmp-dev 

# get our own version of wget since the default is to old to handle some ssl certs
RUN wget http://ftp.gnu.org/gnu/wget/wget-1.18.tar.gz; tar -zxvf wget-1.18.tar.gz; cd wget-1.18; ./configure --prefix=/usr/local --with-ssl=openssl; make; make install; cat /usr/local/bin/wget > /usr/bin/wget \
 && wget https://www.kernel.org/pub/software/scm/git/git-2.9.2.tar.gz \
 && tar xzf git-2.9.2.tar.gz \
 && cd git-2.9.2; make prefix=/usr; make prefix= /usr install \
 && git config --global user.email "you@example.com" \
 && git config --global user.name "Your Name"

# install RVM, Ruby, Bundler, and Omnibus
RUN gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \
 && curl -sSL https://get.rvm.io | bash -s stable

COPY Gemfile /tmp
RUN /bin/bash -l -c "rvm use --install 2.3.1; gem install bundler --no-ri --no-rdoc; cd /tmp; bundle install --verbose --binstubs --jobs `nproc --ignore=1` --retry=3"

VOLUME ["/vagrant"]
CMD ["/bin/bash","/vagrant/build/build_agent.sh"]
